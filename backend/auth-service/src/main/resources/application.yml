project:
  version: @project.version@

spring:
  application:
    name: auth-service
  main.banner-mode: "off"
  sql.init.mode: never

  profiles:
    active: prod

  datasource:
    url: jdbc:postgresql://${DB_HOST:postgres}:${DB_PORT:5432}/${POSTGRES_DB}?currentSchema=${DB_SCHEMA:auth},public
    username: ${POSTGRES_USER}
    password: ${POSTGRES_PASSWORD}
    hikari:
      schema: ${DB_SCHEMA:auth}
      maximum-pool-size: 30

  jpa:
    hibernate:
      ddl-auto: validate
      default_schema: ${DB_SCHEMA:auth}
    properties:
      hibernate.default_schema: ${DB_SCHEMA:auth}
      hibernate.dialect: org.hibernate.dialect.PostgreSQLDialect
    open-in-view: false

  flyway:
    enabled: true
    schemas: ${DB_SCHEMA:auth}
    default-schema: ${DB_SCHEMA:auth}
    table: ${FLYWAY_TABLE:flyway_history_auth}
    validate-on-migrate: true
    baseline-on-migrate: false
    locations:
      - classpath:db/migration
      - classpath:db/r
  
  rabbitmq:
    host: ${RABBITMQ_HOST:rabbitmq}
    port: ${RABBITMQ_PORT:5672}
    username: ${RABBITMQ_USER:guest}
    password: ${RABBITMQ_PASS:guest}
    template:
      mandatory: true                  # importante para que Spring notifique si un mensaje no se pudo enrutar
      retry:
        enabled: true                  # activa reintentos en el publisher
        initial-interval: 1000ms
        max-attempts: 3
        multiplier: 2.0
        max-interval: 10000ms
# Termina spring context

rabbitmq:
  notifications:
    exchange: notifications.exchange
    key: notifications.key

jwt:
  secret: ${JWT_SECRET}
  expiration:
    access: 900000    # 15 minutos
    refresh: 604800000 # 7 d√≠as

frontend:
  url: ${FRONTEND_URL}

security:
  password-reset:
    expiration-minutes: 30

support:
  email: support@ticketly.com

logging.level:
  root: INFO
  org.hibernate.SQL: WARN
  org.hibernate.type.descriptor.sql.BasicBinder: WARN

management:
  endpoints.web.exposure.include: "health,info"
  endpoint.health.show-details: never
