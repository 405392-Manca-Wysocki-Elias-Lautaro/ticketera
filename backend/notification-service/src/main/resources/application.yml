project:
  version: @project.version@

spring:
  config:
    activate:
      on-profile: prod
  application:
    name: notification-service
  main.banner-mode: "off"
  sql.init.mode: never

  datasource:
    url: jdbc:postgresql://${DB_HOST:postgres}:${DB_PORT:5432}/${POSTGRES_DB}?currentSchema=${DB_SCHEMA:notifications},public
    username: ${POSTGRES_USER}
    password: ${POSTGRES_PASSWORD}
    hikari:
      schema: ${DB_SCHEMA:notifications}
      maximum-pool-size: 30

  jpa:
    hibernate:
      ddl-auto: validate
      default_schema: ${DB_SCHEMA:notifications}
    properties:
      hibernate.default_schema: ${DB_SCHEMA:notifications}
      hibernate.dialect: org.hibernate.dialect.PostgreSQLDialect
    open-in-view: false

  flyway:
    enabled: true
    schemas: ${DB_SCHEMA:notifications}
    default-schema: ${DB_SCHEMA:notifications}
    table: ${FLYWAY_TABLE:flyway_history_notifications}
    validate-on-migrate: true
    baseline-on-migrate: false
    locations:
      - classpath:db/migration
      - classpath:db/r

  mail:
    host: smtp.sendgrid.net
    port: 587
    username: apikey
    password: ${SENDGRID_API_KEY}
    properties:
      mail:
        smtp:
          auth: true
          starttls.enable: true

  rabbitmq:
    host: ${RABBITMQ_HOST:localhost}
    port: 5672
    username: ${RABBITMQ_USER:guest}
    password: ${RABBITMQ_PASS:guest}

rabbitmq:
  notifications:
    exchange: notifications.exchange
    queue: notifications.queue
    routing-key: notifications.key

sendgrid:
    api-key: ${SENDGRID_API_KEY}
  
logging.level:
  root: INFO
  org.hibernate.SQL: WARN
  org.hibernate.type.descriptor.sql.BasicBinder: WARN

management:
  endpoints.web.exposure.include: "health,info"
  endpoint.health.show-details: never
