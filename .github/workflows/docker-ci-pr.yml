name: CI - PR Docker (detect + matrix build)
on:
  pull_request:
    branches: [develop, main]

jobs:
  detect-changes:
    runs-on: ubuntu-latest
    outputs:
      matrix: ${{ steps.mk.outputs.matrix }}
    steps:
      - uses: actions/checkout@v4
      - uses: dorny/paths-filter@v3
        id: changes
        with:
          filters: |
            frontend:       ['ticketera/frontend/**','ticketera/frontend/Dockerfile']
            gateway:        ['ticketera/backend/gateway/**','ticketera/backend/gateway/Dockerfile']
            auth:           ['ticketera/backend/auth-service/**','ticketera/backend/auth-service/Dockerfile']
            events:         ['ticketera/backend/event-service/**','ticketera/backend/event-service/Dockerfile']
            tickets:        ['ticketera/backend/ticket-service/**','ticketera/backend/ticket-service/Dockerfile']
            payments:       ['ticketera/backend/payment-service/**','ticketera/backend/payment-service/Dockerfile']
            notifications:  ['ticketera/backend/notification-service/**','ticketera/backend/notification-service/Dockerfile']
            orders:         ['ticketera/backend/order-service/**','ticketera/backend/order-service/Dockerfile']   # ðŸ‘ˆ NEW

      - id: mk
        run: |
          MATRIX='{"include":[]}'
          add(){ MATRIX=$(jq -c --arg n "$1" --arg p "$2" '.include += [{"name":$n,"path":$p}]'<<<"$MATRIX"); }
          sudo apt-get update && sudo apt-get install -y jq
          [ "${{ steps.changes.outputs.frontend }}"      = "true" ] && add frontend      ticketera/frontend
          [ "${{ steps.changes.outputs.gateway }}"       = "true" ] && add gateway       ticketera/backend/gateway
          [ "${{ steps.changes.outputs.auth }}"          = "true" ] && add auth          ticketera/backend/auth-service
          [ "${{ steps.changes.outputs.events }}"        = "true" ] && add events        ticketera/backend/event-service
          [ "${{ steps.changes.outputs.tickets }}"       = "true" ] && add tickets       ticketera/backend/ticket-service
          [ "${{ steps.changes.outputs.payments }}"      = "true" ] && add payments      ticketera/backend/payment-service
          [ "${{ steps.changes.outputs.notifications }}" = "true" ] && add notifications ticketera/backend/notification-service
          [ "${{ steps.changes.outputs.orders }}"        = "true" ] && add orders        ticketera/backend/order-service     # ðŸ‘ˆ NEW
          echo "matrix=$MATRIX" >> "$GITHUB_OUTPUT"

  build:
    needs: detect-changes
    if: ${{ fromJSON(needs.detect-changes.outputs.matrix).include != null && fromJSON(needs.detect-changes.outputs.matrix).include[0] != null }}
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix: ${{ fromJSON(needs.detect-changes.outputs.matrix) }}
    steps:
      - uses: actions/checkout@v4
      - uses: docker/setup-buildx-action@v3
      - name: Docker build ${{ matrix.name }}
        uses: docker/build-push-action@v6
        with:
          context: ${{ matrix.path }}
          file: ${{ matrix.path }}/Dockerfile
          push: false
          load: true
          cache-from: type=gha
          cache-to: type=gha,mode=max
